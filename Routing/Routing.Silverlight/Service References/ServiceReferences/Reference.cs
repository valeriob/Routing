//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Routing.Silverlight.ServiceReferences {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paging", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Query")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Routing.Silverlight.ServiceReferences.SearchScenarios))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Routing.Silverlight.ServiceReferences.NearByPagedQuery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Routing.Silverlight.ServiceReferences.SearchDestinations))]
    public partial class Paging : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool DescendingField;
        
        private string OrderByField;
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        private int TotalResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Descending {
            get {
                return this.DescendingField;
            }
            set {
                if ((this.DescendingField.Equals(value) != true)) {
                    this.DescendingField = value;
                    this.RaisePropertyChanged("Descending");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderBy {
            get {
                return this.OrderByField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderByField, value) != true)) {
                    this.OrderByField = value;
                    this.RaisePropertyChanged("OrderBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalResults {
            get {
                return this.TotalResultsField;
            }
            set {
                if ((this.TotalResultsField.Equals(value) != true)) {
                    this.TotalResultsField = value;
                    this.RaisePropertyChanged("TotalResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchScenarios", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Query")]
    public partial class SearchScenarios : Routing.Silverlight.ServiceReferences.Paging {
        
        private System.Nullable<System.DateTime> FromField;
        
        private System.Nullable<System.DateTime> ToField;
        
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> From {
            get {
                return this.FromField;
            }
            set {
                if ((this.FromField.Equals(value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> To {
            get {
                return this.ToField;
            }
            set {
                if ((this.ToField.Equals(value) != true)) {
                    this.ToField = value;
                    this.RaisePropertyChanged("To");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NearByPagedQuery", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Query")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Routing.Silverlight.ServiceReferences.SearchDestinations))]
    public partial class NearByPagedQuery : Routing.Silverlight.ServiceReferences.Paging {
        
        private System.Nullable<double> NearBy_LatitudeField;
        
        private System.Nullable<double> NearBy_LongitudeField;
        
        private System.Nullable<double> NearBy_RadiusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> NearBy_Latitude {
            get {
                return this.NearBy_LatitudeField;
            }
            set {
                if ((this.NearBy_LatitudeField.Equals(value) != true)) {
                    this.NearBy_LatitudeField = value;
                    this.RaisePropertyChanged("NearBy_Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> NearBy_Longitude {
            get {
                return this.NearBy_LongitudeField;
            }
            set {
                if ((this.NearBy_LongitudeField.Equals(value) != true)) {
                    this.NearBy_LongitudeField = value;
                    this.RaisePropertyChanged("NearBy_Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> NearBy_Radius {
            get {
                return this.NearBy_RadiusField;
            }
            set {
                if ((this.NearBy_RadiusField.Equals(value) != true)) {
                    this.NearBy_RadiusField = value;
                    this.RaisePropertyChanged("NearBy_Radius");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchDestinations", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Query")]
    public partial class SearchDestinations : Routing.Silverlight.ServiceReferences.NearByPagedQuery {
        
        private string AddressField;
        
        private string ExternalIdField;
        
        private string IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DestinationDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto")]
    public partial class DestinationDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string ExternalIdField;
        
        private string IdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private string NameField;
        
        private double RadiusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractScenarioDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Abstracts")]
    public partial class AbstractScenarioDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private string IdField;
        
        private string NameField;
        
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractSimulationDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Abstracts")]
    public partial class AbstractSimulationDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedField;
        
        private string NameField;
        
        private int NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferences.IReferences")]
    public interface IReferences {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReferences/Known_Destinations", ReplyAction="http://tempuri.org/IReferences/Known_DestinationsResponse")]
        System.IAsyncResult BeginKnown_Destinations(Routing.Silverlight.ServiceReferences.SearchDestinations query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto> EndKnown_Destinations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReferences/Search_Scenarios", ReplyAction="http://tempuri.org/IReferences/Search_ScenariosResponse")]
        System.IAsyncResult BeginSearch_Scenarios(Routing.Silverlight.ServiceReferences.SearchScenarios query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto> EndSearch_Scenarios(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReferences/Get_AbstractScenario", ReplyAction="http://tempuri.org/IReferences/Get_AbstractScenarioResponse")]
        System.IAsyncResult BeginGet_AbstractScenario(string id, System.AsyncCallback callback, object asyncState);
        
        Routing.Silverlight.ServiceReferences.AbstractScenarioDto EndGet_AbstractScenario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IReferences/Get_AbstractSiumulations", ReplyAction="http://tempuri.org/IReferences/Get_AbstractSiumulationsResponse")]
        System.IAsyncResult BeginGet_AbstractSiumulations(string scenarioId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto> EndGet_AbstractSiumulations(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReferencesChannel : Routing.Silverlight.ServiceReferences.IReferences, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Known_DestinationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Known_DestinationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Search_ScenariosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Search_ScenariosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_AbstractScenarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_AbstractScenarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Routing.Silverlight.ServiceReferences.AbstractScenarioDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Routing.Silverlight.ServiceReferences.AbstractScenarioDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_AbstractSiumulationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_AbstractSiumulationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReferencesClient : System.ServiceModel.ClientBase<Routing.Silverlight.ServiceReferences.IReferences>, Routing.Silverlight.ServiceReferences.IReferences {
        
        private BeginOperationDelegate onBeginKnown_DestinationsDelegate;
        
        private EndOperationDelegate onEndKnown_DestinationsDelegate;
        
        private System.Threading.SendOrPostCallback onKnown_DestinationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearch_ScenariosDelegate;
        
        private EndOperationDelegate onEndSearch_ScenariosDelegate;
        
        private System.Threading.SendOrPostCallback onSearch_ScenariosCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_AbstractScenarioDelegate;
        
        private EndOperationDelegate onEndGet_AbstractScenarioDelegate;
        
        private System.Threading.SendOrPostCallback onGet_AbstractScenarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_AbstractSiumulationsDelegate;
        
        private EndOperationDelegate onEndGet_AbstractSiumulationsDelegate;
        
        private System.Threading.SendOrPostCallback onGet_AbstractSiumulationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ReferencesClient() {
        }
        
        public ReferencesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReferencesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReferencesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReferencesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<Known_DestinationsCompletedEventArgs> Known_DestinationsCompleted;
        
        public event System.EventHandler<Search_ScenariosCompletedEventArgs> Search_ScenariosCompleted;
        
        public event System.EventHandler<Get_AbstractScenarioCompletedEventArgs> Get_AbstractScenarioCompleted;
        
        public event System.EventHandler<Get_AbstractSiumulationsCompletedEventArgs> Get_AbstractSiumulationsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Routing.Silverlight.ServiceReferences.IReferences.BeginKnown_Destinations(Routing.Silverlight.ServiceReferences.SearchDestinations query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginKnown_Destinations(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto> Routing.Silverlight.ServiceReferences.IReferences.EndKnown_Destinations(System.IAsyncResult result) {
            return base.Channel.EndKnown_Destinations(result);
        }
        
        private System.IAsyncResult OnBeginKnown_Destinations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Routing.Silverlight.ServiceReferences.SearchDestinations query = ((Routing.Silverlight.ServiceReferences.SearchDestinations)(inValues[0]));
            return ((Routing.Silverlight.ServiceReferences.IReferences)(this)).BeginKnown_Destinations(query, callback, asyncState);
        }
        
        private object[] OnEndKnown_Destinations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto> retVal = ((Routing.Silverlight.ServiceReferences.IReferences)(this)).EndKnown_Destinations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnKnown_DestinationsCompleted(object state) {
            if ((this.Known_DestinationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Known_DestinationsCompleted(this, new Known_DestinationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Known_DestinationsAsync(Routing.Silverlight.ServiceReferences.SearchDestinations query) {
            this.Known_DestinationsAsync(query, null);
        }
        
        public void Known_DestinationsAsync(Routing.Silverlight.ServiceReferences.SearchDestinations query, object userState) {
            if ((this.onBeginKnown_DestinationsDelegate == null)) {
                this.onBeginKnown_DestinationsDelegate = new BeginOperationDelegate(this.OnBeginKnown_Destinations);
            }
            if ((this.onEndKnown_DestinationsDelegate == null)) {
                this.onEndKnown_DestinationsDelegate = new EndOperationDelegate(this.OnEndKnown_Destinations);
            }
            if ((this.onKnown_DestinationsCompletedDelegate == null)) {
                this.onKnown_DestinationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnKnown_DestinationsCompleted);
            }
            base.InvokeAsync(this.onBeginKnown_DestinationsDelegate, new object[] {
                        query}, this.onEndKnown_DestinationsDelegate, this.onKnown_DestinationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Routing.Silverlight.ServiceReferences.IReferences.BeginSearch_Scenarios(Routing.Silverlight.ServiceReferences.SearchScenarios query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearch_Scenarios(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto> Routing.Silverlight.ServiceReferences.IReferences.EndSearch_Scenarios(System.IAsyncResult result) {
            return base.Channel.EndSearch_Scenarios(result);
        }
        
        private System.IAsyncResult OnBeginSearch_Scenarios(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Routing.Silverlight.ServiceReferences.SearchScenarios query = ((Routing.Silverlight.ServiceReferences.SearchScenarios)(inValues[0]));
            return ((Routing.Silverlight.ServiceReferences.IReferences)(this)).BeginSearch_Scenarios(query, callback, asyncState);
        }
        
        private object[] OnEndSearch_Scenarios(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto> retVal = ((Routing.Silverlight.ServiceReferences.IReferences)(this)).EndSearch_Scenarios(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearch_ScenariosCompleted(object state) {
            if ((this.Search_ScenariosCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Search_ScenariosCompleted(this, new Search_ScenariosCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Search_ScenariosAsync(Routing.Silverlight.ServiceReferences.SearchScenarios query) {
            this.Search_ScenariosAsync(query, null);
        }
        
        public void Search_ScenariosAsync(Routing.Silverlight.ServiceReferences.SearchScenarios query, object userState) {
            if ((this.onBeginSearch_ScenariosDelegate == null)) {
                this.onBeginSearch_ScenariosDelegate = new BeginOperationDelegate(this.OnBeginSearch_Scenarios);
            }
            if ((this.onEndSearch_ScenariosDelegate == null)) {
                this.onEndSearch_ScenariosDelegate = new EndOperationDelegate(this.OnEndSearch_Scenarios);
            }
            if ((this.onSearch_ScenariosCompletedDelegate == null)) {
                this.onSearch_ScenariosCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearch_ScenariosCompleted);
            }
            base.InvokeAsync(this.onBeginSearch_ScenariosDelegate, new object[] {
                        query}, this.onEndSearch_ScenariosDelegate, this.onSearch_ScenariosCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Routing.Silverlight.ServiceReferences.IReferences.BeginGet_AbstractScenario(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_AbstractScenario(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Routing.Silverlight.ServiceReferences.AbstractScenarioDto Routing.Silverlight.ServiceReferences.IReferences.EndGet_AbstractScenario(System.IAsyncResult result) {
            return base.Channel.EndGet_AbstractScenario(result);
        }
        
        private System.IAsyncResult OnBeginGet_AbstractScenario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Routing.Silverlight.ServiceReferences.IReferences)(this)).BeginGet_AbstractScenario(id, callback, asyncState);
        }
        
        private object[] OnEndGet_AbstractScenario(System.IAsyncResult result) {
            Routing.Silverlight.ServiceReferences.AbstractScenarioDto retVal = ((Routing.Silverlight.ServiceReferences.IReferences)(this)).EndGet_AbstractScenario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_AbstractScenarioCompleted(object state) {
            if ((this.Get_AbstractScenarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_AbstractScenarioCompleted(this, new Get_AbstractScenarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_AbstractScenarioAsync(string id) {
            this.Get_AbstractScenarioAsync(id, null);
        }
        
        public void Get_AbstractScenarioAsync(string id, object userState) {
            if ((this.onBeginGet_AbstractScenarioDelegate == null)) {
                this.onBeginGet_AbstractScenarioDelegate = new BeginOperationDelegate(this.OnBeginGet_AbstractScenario);
            }
            if ((this.onEndGet_AbstractScenarioDelegate == null)) {
                this.onEndGet_AbstractScenarioDelegate = new EndOperationDelegate(this.OnEndGet_AbstractScenario);
            }
            if ((this.onGet_AbstractScenarioCompletedDelegate == null)) {
                this.onGet_AbstractScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_AbstractScenarioCompleted);
            }
            base.InvokeAsync(this.onBeginGet_AbstractScenarioDelegate, new object[] {
                        id}, this.onEndGet_AbstractScenarioDelegate, this.onGet_AbstractScenarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Routing.Silverlight.ServiceReferences.IReferences.BeginGet_AbstractSiumulations(string scenarioId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_AbstractSiumulations(scenarioId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto> Routing.Silverlight.ServiceReferences.IReferences.EndGet_AbstractSiumulations(System.IAsyncResult result) {
            return base.Channel.EndGet_AbstractSiumulations(result);
        }
        
        private System.IAsyncResult OnBeginGet_AbstractSiumulations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string scenarioId = ((string)(inValues[0]));
            return ((Routing.Silverlight.ServiceReferences.IReferences)(this)).BeginGet_AbstractSiumulations(scenarioId, callback, asyncState);
        }
        
        private object[] OnEndGet_AbstractSiumulations(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto> retVal = ((Routing.Silverlight.ServiceReferences.IReferences)(this)).EndGet_AbstractSiumulations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_AbstractSiumulationsCompleted(object state) {
            if ((this.Get_AbstractSiumulationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_AbstractSiumulationsCompleted(this, new Get_AbstractSiumulationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_AbstractSiumulationsAsync(string scenarioId) {
            this.Get_AbstractSiumulationsAsync(scenarioId, null);
        }
        
        public void Get_AbstractSiumulationsAsync(string scenarioId, object userState) {
            if ((this.onBeginGet_AbstractSiumulationsDelegate == null)) {
                this.onBeginGet_AbstractSiumulationsDelegate = new BeginOperationDelegate(this.OnBeginGet_AbstractSiumulations);
            }
            if ((this.onEndGet_AbstractSiumulationsDelegate == null)) {
                this.onEndGet_AbstractSiumulationsDelegate = new EndOperationDelegate(this.OnEndGet_AbstractSiumulations);
            }
            if ((this.onGet_AbstractSiumulationsCompletedDelegate == null)) {
                this.onGet_AbstractSiumulationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_AbstractSiumulationsCompleted);
            }
            base.InvokeAsync(this.onBeginGet_AbstractSiumulationsDelegate, new object[] {
                        scenarioId}, this.onEndGet_AbstractSiumulationsDelegate, this.onGet_AbstractSiumulationsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Routing.Silverlight.ServiceReferences.IReferences CreateChannel() {
            return new ReferencesClientChannel(this);
        }
        
        private class ReferencesClientChannel : ChannelBase<Routing.Silverlight.ServiceReferences.IReferences>, Routing.Silverlight.ServiceReferences.IReferences {
            
            public ReferencesClientChannel(System.ServiceModel.ClientBase<Routing.Silverlight.ServiceReferences.IReferences> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginKnown_Destinations(Routing.Silverlight.ServiceReferences.SearchDestinations query, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = query;
                System.IAsyncResult _result = base.BeginInvoke("Known_Destinations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto> EndKnown_Destinations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.DestinationDto>)(base.EndInvoke("Known_Destinations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearch_Scenarios(Routing.Silverlight.ServiceReferences.SearchScenarios query, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = query;
                System.IAsyncResult _result = base.BeginInvoke("Search_Scenarios", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto> EndSearch_Scenarios(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractScenarioDto>)(base.EndInvoke("Search_Scenarios", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_AbstractScenario(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_AbstractScenario", _args, callback, asyncState);
                return _result;
            }
            
            public Routing.Silverlight.ServiceReferences.AbstractScenarioDto EndGet_AbstractScenario(System.IAsyncResult result) {
                object[] _args = new object[0];
                Routing.Silverlight.ServiceReferences.AbstractScenarioDto _result = ((Routing.Silverlight.ServiceReferences.AbstractScenarioDto)(base.EndInvoke("Get_AbstractScenario", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGet_AbstractSiumulations(string scenarioId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = scenarioId;
                System.IAsyncResult _result = base.BeginInvoke("Get_AbstractSiumulations", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto> EndGet_AbstractSiumulations(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto> _result = ((System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ServiceReferences.AbstractSimulationDto>)(base.EndInvoke("Get_AbstractSiumulations", _args, result)));
                return _result;
            }
        }
    }
}
