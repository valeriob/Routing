//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Routing.Silverlight.ScenarioService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Create_Scenario", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Command")]
    public partial class Create_Scenario : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Routing.Silverlight.ScenarioService.ScenarioDto ScenarioField;
        
        private string ScenarioId_To_Be_DeletedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Routing.Silverlight.ScenarioService.ScenarioDto Scenario {
            get {
                return this.ScenarioField;
            }
            set {
                if ((object.ReferenceEquals(this.ScenarioField, value) != true)) {
                    this.ScenarioField = value;
                    this.RaisePropertyChanged("Scenario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScenarioId_To_Be_Deleted {
            get {
                return this.ScenarioId_To_Be_DeletedField;
            }
            set {
                if ((object.ReferenceEquals(this.ScenarioId_To_Be_DeletedField, value) != true)) {
                    this.ScenarioId_To_Be_DeletedField = value;
                    this.RaisePropertyChanged("ScenarioId_To_Be_Deleted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScenarioDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto.Command")]
    public partial class ScenarioDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private string IdField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ScenarioService.OrderDto> OrdersField;
        
        private System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ScenarioService.SimulationDto> SimulationsField;
        
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ScenarioService.OrderDto> Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ScenarioService.SimulationDto> Simulations {
            get {
                return this.SimulationsField;
            }
            set {
                if ((object.ReferenceEquals(this.SimulationsField, value) != true)) {
                    this.SimulationsField = value;
                    this.RaisePropertyChanged("Simulations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto")]
    public partial class OrderDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.DateTime DeliveringField;
        
        private string DescriptionField;
        
        private string DestinationExternalIdField;
        
        private string DestinationIdField;
        
        private string ExternalIdField;
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        private int NumberField;
        
        private double VolumeField;
        
        private string Volume_UnitField;
        
        private double WeightField;
        
        private string Weight_UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Delivering {
            get {
                return this.DeliveringField;
            }
            set {
                if ((this.DeliveringField.Equals(value) != true)) {
                    this.DeliveringField = value;
                    this.RaisePropertyChanged("Delivering");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationExternalId {
            get {
                return this.DestinationExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationExternalIdField, value) != true)) {
                    this.DestinationExternalIdField = value;
                    this.RaisePropertyChanged("DestinationExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DestinationId {
            get {
                return this.DestinationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationIdField, value) != true)) {
                    this.DestinationIdField = value;
                    this.RaisePropertyChanged("DestinationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalId {
            get {
                return this.ExternalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIdField, value) != true)) {
                    this.ExternalIdField = value;
                    this.RaisePropertyChanged("ExternalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Volume_Unit {
            get {
                return this.Volume_UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.Volume_UnitField, value) != true)) {
                    this.Volume_UnitField = value;
                    this.RaisePropertyChanged("Volume_Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Weight_Unit {
            get {
                return this.Weight_UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.Weight_UnitField, value) != true)) {
                    this.Weight_UnitField = value;
                    this.RaisePropertyChanged("Weight_Unit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimulationDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto")]
    public partial class SimulationDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreatedField;
        
        private string NameField;
        
        private int NumberField;
        
        private string Returning_AddressField;
        
        private double Returning_LatitudeField;
        
        private double Returning_LongitudeField;
        
        private string Starting_AddressField;
        
        private double Starting_LatitudeField;
        
        private double Starting_LongitudeField;
        
        private System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ScenarioService.VoyageDto> VoyagesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Returning_Address {
            get {
                return this.Returning_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.Returning_AddressField, value) != true)) {
                    this.Returning_AddressField = value;
                    this.RaisePropertyChanged("Returning_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Returning_Latitude {
            get {
                return this.Returning_LatitudeField;
            }
            set {
                if ((this.Returning_LatitudeField.Equals(value) != true)) {
                    this.Returning_LatitudeField = value;
                    this.RaisePropertyChanged("Returning_Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Returning_Longitude {
            get {
                return this.Returning_LongitudeField;
            }
            set {
                if ((this.Returning_LongitudeField.Equals(value) != true)) {
                    this.Returning_LongitudeField = value;
                    this.RaisePropertyChanged("Returning_Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Starting_Address {
            get {
                return this.Starting_AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.Starting_AddressField, value) != true)) {
                    this.Starting_AddressField = value;
                    this.RaisePropertyChanged("Starting_Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Starting_Latitude {
            get {
                return this.Starting_LatitudeField;
            }
            set {
                if ((this.Starting_LatitudeField.Equals(value) != true)) {
                    this.Starting_LatitudeField = value;
                    this.RaisePropertyChanged("Starting_Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Starting_Longitude {
            get {
                return this.Starting_LongitudeField;
            }
            set {
                if ((this.Starting_LongitudeField.Equals(value) != true)) {
                    this.Starting_LongitudeField = value;
                    this.RaisePropertyChanged("Starting_Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Routing.Silverlight.ScenarioService.VoyageDto> Voyages {
            get {
                return this.VoyagesField;
            }
            set {
                if ((object.ReferenceEquals(this.VoyagesField, value) != true)) {
                    this.VoyagesField = value;
                    this.RaisePropertyChanged("Voyages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoyageDto", Namespace="http://schemas.datacontract.org/2004/07/Routing.Domain.Dto")]
    public partial class VoyageDto : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DepartingField;
        
        private System.TimeSpan Exitmated_TimeField;
        
        private double Extimated_Lenght_KmField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> OrdersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Departing {
            get {
                return this.DepartingField;
            }
            set {
                if ((this.DepartingField.Equals(value) != true)) {
                    this.DepartingField = value;
                    this.RaisePropertyChanged("Departing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Exitmated_Time {
            get {
                return this.Exitmated_TimeField;
            }
            set {
                if ((this.Exitmated_TimeField.Equals(value) != true)) {
                    this.Exitmated_TimeField = value;
                    this.RaisePropertyChanged("Exitmated_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Extimated_Lenght_Km {
            get {
                return this.Extimated_Lenght_KmField;
            }
            set {
                if ((this.Extimated_Lenght_KmField.Equals(value) != true)) {
                    this.Extimated_Lenght_KmField = value;
                    this.RaisePropertyChanged("Extimated_Lenght_Km");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScenarioService.IScenario")]
    public interface IScenario {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScenario/Create_Scenario", ReplyAction="http://tempuri.org/IScenario/Create_ScenarioResponse")]
        System.IAsyncResult BeginCreate_Scenario(Routing.Silverlight.ScenarioService.Create_Scenario command, System.AsyncCallback callback, object asyncState);
        
        void EndCreate_Scenario(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScenario/Get_Scenario", ReplyAction="http://tempuri.org/IScenario/Get_ScenarioResponse")]
        System.IAsyncResult BeginGet_Scenario(string id, System.AsyncCallback callback, object asyncState);
        
        Routing.Silverlight.ScenarioService.ScenarioDto EndGet_Scenario(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScenarioChannel : Routing.Silverlight.ScenarioService.IScenario, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Get_ScenarioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Get_ScenarioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Routing.Silverlight.ScenarioService.ScenarioDto Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Routing.Silverlight.ScenarioService.ScenarioDto)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScenarioClient : System.ServiceModel.ClientBase<Routing.Silverlight.ScenarioService.IScenario>, Routing.Silverlight.ScenarioService.IScenario {
        
        private BeginOperationDelegate onBeginCreate_ScenarioDelegate;
        
        private EndOperationDelegate onEndCreate_ScenarioDelegate;
        
        private System.Threading.SendOrPostCallback onCreate_ScenarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginGet_ScenarioDelegate;
        
        private EndOperationDelegate onEndGet_ScenarioDelegate;
        
        private System.Threading.SendOrPostCallback onGet_ScenarioCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ScenarioClient() {
        }
        
        public ScenarioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScenarioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScenarioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScenarioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Create_ScenarioCompleted;
        
        public event System.EventHandler<Get_ScenarioCompletedEventArgs> Get_ScenarioCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Routing.Silverlight.ScenarioService.IScenario.BeginCreate_Scenario(Routing.Silverlight.ScenarioService.Create_Scenario command, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreate_Scenario(command, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Routing.Silverlight.ScenarioService.IScenario.EndCreate_Scenario(System.IAsyncResult result) {
            base.Channel.EndCreate_Scenario(result);
        }
        
        private System.IAsyncResult OnBeginCreate_Scenario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Routing.Silverlight.ScenarioService.Create_Scenario command = ((Routing.Silverlight.ScenarioService.Create_Scenario)(inValues[0]));
            return ((Routing.Silverlight.ScenarioService.IScenario)(this)).BeginCreate_Scenario(command, callback, asyncState);
        }
        
        private object[] OnEndCreate_Scenario(System.IAsyncResult result) {
            ((Routing.Silverlight.ScenarioService.IScenario)(this)).EndCreate_Scenario(result);
            return null;
        }
        
        private void OnCreate_ScenarioCompleted(object state) {
            if ((this.Create_ScenarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Create_ScenarioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Create_ScenarioAsync(Routing.Silverlight.ScenarioService.Create_Scenario command) {
            this.Create_ScenarioAsync(command, null);
        }
        
        public void Create_ScenarioAsync(Routing.Silverlight.ScenarioService.Create_Scenario command, object userState) {
            if ((this.onBeginCreate_ScenarioDelegate == null)) {
                this.onBeginCreate_ScenarioDelegate = new BeginOperationDelegate(this.OnBeginCreate_Scenario);
            }
            if ((this.onEndCreate_ScenarioDelegate == null)) {
                this.onEndCreate_ScenarioDelegate = new EndOperationDelegate(this.OnEndCreate_Scenario);
            }
            if ((this.onCreate_ScenarioCompletedDelegate == null)) {
                this.onCreate_ScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreate_ScenarioCompleted);
            }
            base.InvokeAsync(this.onBeginCreate_ScenarioDelegate, new object[] {
                        command}, this.onEndCreate_ScenarioDelegate, this.onCreate_ScenarioCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Routing.Silverlight.ScenarioService.IScenario.BeginGet_Scenario(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGet_Scenario(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Routing.Silverlight.ScenarioService.ScenarioDto Routing.Silverlight.ScenarioService.IScenario.EndGet_Scenario(System.IAsyncResult result) {
            return base.Channel.EndGet_Scenario(result);
        }
        
        private System.IAsyncResult OnBeginGet_Scenario(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Routing.Silverlight.ScenarioService.IScenario)(this)).BeginGet_Scenario(id, callback, asyncState);
        }
        
        private object[] OnEndGet_Scenario(System.IAsyncResult result) {
            Routing.Silverlight.ScenarioService.ScenarioDto retVal = ((Routing.Silverlight.ScenarioService.IScenario)(this)).EndGet_Scenario(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGet_ScenarioCompleted(object state) {
            if ((this.Get_ScenarioCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Get_ScenarioCompleted(this, new Get_ScenarioCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Get_ScenarioAsync(string id) {
            this.Get_ScenarioAsync(id, null);
        }
        
        public void Get_ScenarioAsync(string id, object userState) {
            if ((this.onBeginGet_ScenarioDelegate == null)) {
                this.onBeginGet_ScenarioDelegate = new BeginOperationDelegate(this.OnBeginGet_Scenario);
            }
            if ((this.onEndGet_ScenarioDelegate == null)) {
                this.onEndGet_ScenarioDelegate = new EndOperationDelegate(this.OnEndGet_Scenario);
            }
            if ((this.onGet_ScenarioCompletedDelegate == null)) {
                this.onGet_ScenarioCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGet_ScenarioCompleted);
            }
            base.InvokeAsync(this.onBeginGet_ScenarioDelegate, new object[] {
                        id}, this.onEndGet_ScenarioDelegate, this.onGet_ScenarioCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Routing.Silverlight.ScenarioService.IScenario CreateChannel() {
            return new ScenarioClientChannel(this);
        }
        
        private class ScenarioClientChannel : ChannelBase<Routing.Silverlight.ScenarioService.IScenario>, Routing.Silverlight.ScenarioService.IScenario {
            
            public ScenarioClientChannel(System.ServiceModel.ClientBase<Routing.Silverlight.ScenarioService.IScenario> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCreate_Scenario(Routing.Silverlight.ScenarioService.Create_Scenario command, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = command;
                System.IAsyncResult _result = base.BeginInvoke("Create_Scenario", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreate_Scenario(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Create_Scenario", _args, result);
            }
            
            public System.IAsyncResult BeginGet_Scenario(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("Get_Scenario", _args, callback, asyncState);
                return _result;
            }
            
            public Routing.Silverlight.ScenarioService.ScenarioDto EndGet_Scenario(System.IAsyncResult result) {
                object[] _args = new object[0];
                Routing.Silverlight.ScenarioService.ScenarioDto _result = ((Routing.Silverlight.ScenarioService.ScenarioDto)(base.EndInvoke("Get_Scenario", _args, result)));
                return _result;
            }
        }
    }
}
